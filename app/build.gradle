plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'com.blankj.bus'
    id 'androidx.navigation.safeargs.kotlin' // navigation 导航
    id 'com.alibaba.arouter' // Gradle 插件实现路由表的自动加载
}


//配置项目构建的各种属性
android {
    compileSdkVersion 30 //编译时使用 Android版本
    buildToolsVersion = '30.0.3' //编译时使用的构建工具的版本

    //默认配置项
    defaultConfig {
        applicationId "com.base.app" //项目包名

        targetSdkVersion 30 //目标版本
        minSdkVersion 21 //最低兼容Android版本

        versionCode 100 //版本号
        versionName "1.0.0" //版本名

        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', "x86_64"
//            abiFilters 'armeabi', 'armeabi-v7a', 'arm64-v8a', 'x86', "x86_64"
        }
    }
    // 路由需要
    kapt {
        arguments {
            arg("AROUTER_MODULE_NAME", project.getName())
        }
    }
    // 启用 viewBinding 来帮我们进行findviewbyid
    buildFeatures {
        viewBinding = true
    }

    //依赖库多的时候可能出现重复文件,通过 exclude 将重复的文件剔除
    packagingOptions {
        // kotlinx-coroutines-core 需要排除这个 DebugProbesKt.bin
        exclude "DebugProbesKt.bin"
        exclude 'lib/x86/librsjni.so'
        exclude 'lib/x86_64/librsjni.so'
        exclude 'lib/x86/libRSSupport.so'
        exclude "lib/mips/libRSSupport.so"
        exclude 'lib/arm64-v8a/librsjni.so'
        exclude 'lib/x86_64/libRSSupport.so'
        exclude 'META-INF/rxjava.properties'
        exclude 'lib/armeabi-v7a/librsjni.so'
        exclude 'lib/arm64-v8a/libRSSupport.so'
        exclude 'lib/armeabi-v7a/libRSSupport.so'
        exclude 'META-INF/library_release.kotlin_module0'
        exclude 'META-INF/proguard/androidx-annotations.pro'
        exclude 'META-INF/library_release.kotlin_module'
    }

    //签名配置
    signingConfigs {
        config {
            keyAlias "sendinfo"
            keyPassword "sendinfokey"
            storeFile file("./keystore/androidkey")
            storePassword "sendinfokey"
            v2SigningEnabled true
        }
    }

    // 自动化打包配置，release或debug版本的内容
    buildTypes {
        release {
            shrinkResources false // 启用资源压缩（由Android Gradle plugin执行）
            minifyEnabled false // 启用代码压缩、优化和混淆（由R8或者ProGuard执行
            signingConfig signingConfigs.config
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            signingConfig signingConfigs.config
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    // 多渠道打包
    flavorDimensions "default"  // 这个一定要加
    productFlavors {
        sendinfo {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "sendinfo"]
        }
    }

    // 设置编译生成APK的名称
    android.applicationVariants.all { variant ->
        variant.outputs.all { output ->
            outputFileName = "${defaultConfig.versionName}_${variant.name}_${getDate()}.apk"
        }
    }

    //Java版本配置
    compileOptions {
        encoding "utf-8"
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
        useIR = true
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

//    implementation('com.github.zhaoxiuyu:BaseLibrary:1.0.9') {
//        exclude group: 'com.daimajia.androidanimations', module: 'library'
//    }
//    implementation(project(':library')) {
//        exclude group: 'com.daimajia.androidanimations', module: 'library'
//    }

    implementation(project(':module_common'))
    if (!isModuleFunction.toBoolean()) implementation(project(':module_function'))
    if (!isModuleUtils.toBoolean()) implementation(project(':module_utils'))
    if (!isModuleView.toBoolean()) implementation(project(':module_view'))

    kapt 'com.github.bumptech.glide:compiler:4.12.0'

    // 路由
    kapt 'com.alibaba:arouter-compiler:1.5.2'
}

repositories {
    mavenCentral()
}

//打包时间
static def getDate() {
    return new Date().format("yyyyMMdd HH-mm-ss", TimeZone.getTimeZone("UTC"))
}
