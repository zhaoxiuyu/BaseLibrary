buildscript {
    ext {
        kotlin_version = '1.3.72'
    }
    repositories {
//      google()
//      jcenter()
        mavenCentral()
        maven { url 'https://maven.aliyun.com/repository/jcenter' } //jcenter()
        maven { url 'https://maven.aliyun.com/repository/google' }  //google()
        maven { url "https://jitpack.io" }
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        //此处是 android 的插件 gradle 及其版本号
        classpath 'com.android.tools.build:gradle:4.0.1'

        // kotlin
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.4.20"

        // JitPack 上传依赖
        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'

        // didichuxing 流量监控以及其他AOP功能
        classpath 'io.github.didi.dokit:dokitx-plugin:3.4.0-alpha03'

        // 事件总线
        classpath 'com.blankj:bus-gradle-plugin:2.6'

        // 生成简单的对象和构建器类,这些类支持在目的地之间进行类型安全的导航和参数传递
        classpath "androidx.navigation:navigation-safe-args-gradle-plugin:2.3.5"

        // hilt 依赖注入
        classpath 'com.google.dagger:hilt-android-gradle-plugin:2.30.1-alpha'

        // Gradle 插件实现路由表的自动加载
        classpath "com.alibaba:arouter-register:1.0.2"

    }
}

allprojects {
    //这里是项目本身需要的依赖，比如项目所需的 maven 库
    repositories {
//      google()
//      jcenter()
        mavenCentral()
        maven { url 'https://maven.aliyun.com/repository/jcenter' } //jcenter()
        maven { url 'https://maven.aliyun.com/repository/google' }  //google()
        maven { url "https://jitpack.io" }
        maven { url 'https://maven.fabric.io/public' }
        maven { url 'https://dl.bintray.com/jetbrains/anko' } //这是你需要加入的
    }
}

// 这是一个 task 任务，执行 clean project 时执行此 task。可以理解为一个函数
// 该任务继承自 Delete，删除根目录中的 build 目录。
// 相当于执行 Delete.delete(rootProject.buildDir)。
task clean(type: Delete) {
    delete rootProject.buildDir
}
